{"ast":null,"code":"var _jsxFileName = \"E:\\\\react-native\\\\HypeScout\\\\Hypescout\\\\src\\\\context\\\\Context.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContext = /*#__PURE__*/createContext();\n\nconst Context = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const url = \"https://afridirahman97.github.io/api/users.json\";\n  const [totalData, setTotalData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchText, setSearchTxt] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1); // Theme Mode\n\n  const [themeMode, setThemeMode] = useState(true); // Fetching all the data\n\n  const fetchData = async () => {\n    setIsLoading(true);\n    let response = await fetch(url);\n    response = await response.json();\n    console.log(response);\n    setTotalData(response);\n    setIsLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      totalData,\n      setTotalData,\n      isLoading,\n      fetchData,\n      themeMode,\n      setThemeMode,\n      searchText,\n      setSearchTxt,\n      currentPage,\n      setCurrentPage\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Context, \"mAEfCquUDJSjWh56GS+0FG9IGaA=\");\n\n_c = Context;\nexport default Context;\n\nvar _c;\n\n$RefreshReg$(_c, \"Context\");","map":{"version":3,"sources":["E:/react-native/HypeScout/Hypescout/src/context/Context.js"],"names":["React","createContext","useState","AppContext","Context","children","url","totalData","setTotalData","isLoading","setIsLoading","searchText","setSearchTxt","currentPage","setCurrentPage","themeMode","setThemeMode","fetchData","response","fetch","json","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;;AAEA,OAAO,MAAMC,UAAU,gBAAGF,aAAa,EAAhC;;AAEP,MAAMG,OAAO,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAChC,QAAMC,GAAG,GAAG,iDAAZ;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACS,UAAD,EAAaC,YAAb,IAA6BV,QAAQ,CAAC,EAAD,CAA3C;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,CAAD,CAA9C,CALgC,CAOhC;;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,IAAD,CAA1C,CARgC,CAUhC;;AACA,QAAMe,SAAS,GAAG,YAAY;AAC5BP,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,QAAIQ,QAAQ,GAAG,MAAMC,KAAK,CAACb,GAAD,CAA1B;AACAY,IAAAA,QAAQ,GAAG,MAAMA,QAAQ,CAACE,IAAT,EAAjB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACAV,IAAAA,YAAY,CAACU,QAAD,CAAZ;AACAR,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAPD;;AASA,sBACE,QAAC,UAAD,CAAY,QAAZ;AACE,IAAA,KAAK,EAAE;AACLH,MAAAA,SADK;AAELC,MAAAA,YAFK;AAGLC,MAAAA,SAHK;AAILQ,MAAAA,SAJK;AAKLF,MAAAA,SALK;AAMLC,MAAAA,YANK;AAOLL,MAAAA,UAPK;AAQLC,MAAAA,YARK;AASLC,MAAAA,WATK;AAULC,MAAAA;AAVK,KADT;AAAA,cAcGT;AAdH;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAtCD;;GAAMD,O;;KAAAA,O;AAwCN,eAAeA,OAAf","sourcesContent":["import React, { createContext, useState } from \"react\";\r\n\r\nexport const AppContext = createContext();\r\n\r\nconst Context = ({ children }) => {\r\n  const url = \"https://afridirahman97.github.io/api/users.json\";\r\n  const [totalData, setTotalData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [searchText, setSearchTxt] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  // Theme Mode\r\n  const [themeMode, setThemeMode] = useState(true);\r\n\r\n  // Fetching all the data\r\n  const fetchData = async () => {\r\n    setIsLoading(true);\r\n    let response = await fetch(url);\r\n    response = await response.json();\r\n    console.log(response)\r\n    setTotalData(response);\r\n    setIsLoading(false);\r\n  };\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        totalData,\r\n        setTotalData,\r\n        isLoading,\r\n        fetchData,\r\n        themeMode,\r\n        setThemeMode,\r\n        searchText,\r\n        setSearchTxt,\r\n        currentPage,\r\n        setCurrentPage,\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport default Context;\r\n"]},"metadata":{},"sourceType":"module"}