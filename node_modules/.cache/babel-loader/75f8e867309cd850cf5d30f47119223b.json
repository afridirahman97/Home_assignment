{"ast":null,"code":"var _jsxFileName = \"E:\\\\react-native\\\\HypeScout\\\\Hypescout\\\\src\\\\components\\\\customPagination\\\\Pagination.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { AppContext } from \"../../context/Context\"; // Import usePagination Hook\n\nimport { usePagination, DOTS } from \"./usePagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Pagination = props => {\n  _s();\n\n  const {\n    themeMode\n  } = useContext(AppContext);\n  const {\n    onPageChange,\n    totalCount,\n    siblingCount = 1,\n    currentPage,\n    pageSize\n  } = props;\n  const paginationRange = usePagination({\n    currentPage,\n    totalCount,\n    siblingCount,\n    pageSize\n  });\n\n  if (currentPage === 0 || paginationRange.length < 2) {\n    return null;\n  }\n\n  const onNext = () => {\n    onPageChange(currentPage + 1);\n  };\n\n  const onPrevious = () => {\n    onPageChange(currentPage - 1);\n  };\n\n  let lastPage = paginationRange[paginationRange.length - 1];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-11/12 sm:w-4/5 mx-auto flex items-center \\r justify-between gap-1\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: `text-xs sm:text-sm md:text-base lg:text-lg ${themeMode ? \"text-light-dark-font hover:text-light-gray-font\" : \"text-light-gray-font hover:text-white\"}`,\n      disabled: currentPage === 1,\n      onClick: onPrevious,\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa-solid fa-arrow-left pr-1 sm:pr-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), \"Previous\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: `${themeMode ? \"text-light-dark-font\" : \"text-light-gray-font\"} flex gap-1 sm:gap-2 items-center justify-center`,\n      children: paginationRange.map(pageNumber => {\n        if (pageNumber === DOTS) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u2026\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 20\n          }, this);\n        }\n\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `py-1 px-2 text-xs sm:text-sm md:text-base lg:text-lg md:py-2 md:px-2 rounded-full cursor-pointer ${themeMode ? \"hover:text-light-gray-font\" : \"hover:text-white\"} ${pageNumber === currentPage ? \"bg-nav-active-bg text-white\" : \"\"}`,\n          onClick: () => onPageChange(pageNumber),\n          children: pageNumber\n        }, pageNumber, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `text-xs sm:text-sm md:text-base lg:text-lg ${themeMode ? \"text-light-dark-font hover:text-light-gray-font\" : \"text-light-gray-font hover:text-white\"}`,\n      disabled: currentPage === lastPage,\n      onClick: onNext,\n      children: [\"Next\", /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa-solid fa-arrow-right pl-1 sm:pl-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Pagination, \"yX1abizfxvpZ5qGdJYrHGPHnfMU=\", false, function () {\n  return [usePagination];\n});\n\n_c = Pagination;\nexport default Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["E:/react-native/HypeScout/Hypescout/src/components/customPagination/Pagination.js"],"names":["React","useContext","AppContext","usePagination","DOTS","Pagination","props","themeMode","onPageChange","totalCount","siblingCount","currentPage","pageSize","paginationRange","length","onNext","onPrevious","lastPage","map","pageNumber"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,UAAT,QAA2B,uBAA3B,C,CAEA;;AACA,SAASC,aAAT,EAAwBC,IAAxB,QAAoC,iBAApC;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAM;AAAEC,IAAAA;AAAF,MAAgBN,UAAU,CAACC,UAAD,CAAhC;AAEA,QAAM;AACJM,IAAAA,YADI;AAEJC,IAAAA,UAFI;AAGJC,IAAAA,YAAY,GAAG,CAHX;AAIJC,IAAAA,WAJI;AAKJC,IAAAA;AALI,MAMFN,KANJ;AAQA,QAAMO,eAAe,GAAGV,aAAa,CAAC;AACpCQ,IAAAA,WADoC;AAEpCF,IAAAA,UAFoC;AAGpCC,IAAAA,YAHoC;AAIpCE,IAAAA;AAJoC,GAAD,CAArC;;AAOA,MAAID,WAAW,KAAK,CAAhB,IAAqBE,eAAe,CAACC,MAAhB,GAAyB,CAAlD,EAAqD;AACnD,WAAO,IAAP;AACD;;AAED,QAAMC,MAAM,GAAG,MAAM;AACnBP,IAAAA,YAAY,CAACG,WAAW,GAAG,CAAf,CAAZ;AACD,GAFD;;AAIA,QAAMK,UAAU,GAAG,MAAM;AACvBR,IAAAA,YAAY,CAACG,WAAW,GAAG,CAAf,CAAZ;AACD,GAFD;;AAIA,MAAIM,QAAQ,GAAGJ,eAAe,CAACA,eAAe,CAACC,MAAhB,GAAyB,CAA1B,CAA9B;AAEA,sBACE;AACE,IAAA,SAAS,EAAC,qEADZ;AAAA,4BAIE;AACE,MAAA,SAAS,EAAG,8CACVP,SAAS,GACL,iDADK,GAEL,uCACL,EALH;AAME,MAAA,QAAQ,EAAEI,WAAW,KAAK,CAN5B;AAOE,MAAA,OAAO,EAAEK,UAPX;AAAA,8BASE;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAiBE;AACE,MAAA,SAAS,EAAG,GACVT,SAAS,GAAG,sBAAH,GAA4B,sBACtC,kDAHH;AAAA,gBAKGM,eAAe,CAACK,GAAhB,CAAqBC,UAAD,IAAgB;AACnC,YAAIA,UAAU,KAAKf,IAAnB,EAAyB;AACvB,8BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD;;AAED,4BACE;AAEE,UAAA,SAAS,EAAG,oGACVG,SAAS,GAAG,4BAAH,GAAkC,kBAC5C,IACCY,UAAU,KAAKR,WAAf,GAA6B,6BAA7B,GAA6D,EAC9D,EANH;AAOE,UAAA,OAAO,EAAE,MAAMH,YAAY,CAACW,UAAD,CAP7B;AAAA,oBASGA;AATH,WACOA,UADP;AAAA;AAAA;AAAA;AAAA,gBADF;AAaD,OAlBA;AALH;AAAA;AAAA;AAAA;AAAA,YAjBF,eA2CE;AACE,MAAA,SAAS,EAAG,8CACVZ,SAAS,GACL,iDADK,GAEL,uCACL,EALH;AAME,MAAA,QAAQ,EAAEI,WAAW,KAAKM,QAN5B;AAOE,MAAA,OAAO,EAAEF,MAPX;AAAA,sCAUE;AAAG,QAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YA3CF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0DD,CA1FD;;GAAMV,U;UAWoBF,a;;;KAXpBE,U;AA4FN,eAAeA,UAAf","sourcesContent":["import React, { useContext } from \"react\";\r\nimport { AppContext } from \"../../context/Context\";\r\n\r\n// Import usePagination Hook\r\nimport { usePagination, DOTS } from \"./usePagination\";\r\n\r\nconst Pagination = (props) => {\r\n  const { themeMode } = useContext(AppContext);\r\n\r\n  const {\r\n    onPageChange,\r\n    totalCount,\r\n    siblingCount = 1,\r\n    currentPage,\r\n    pageSize,\r\n  } = props;\r\n\r\n  const paginationRange = usePagination({\r\n    currentPage,\r\n    totalCount,\r\n    siblingCount,\r\n    pageSize,\r\n  });\r\n\r\n  if (currentPage === 0 || paginationRange.length < 2) {\r\n    return null;\r\n  }\r\n\r\n  const onNext = () => {\r\n    onPageChange(currentPage + 1);\r\n  };\r\n\r\n  const onPrevious = () => {\r\n    onPageChange(currentPage - 1);\r\n  };\r\n\r\n  let lastPage = paginationRange[paginationRange.length - 1];\r\n\r\n  return (\r\n    <div\r\n      className=\"w-11/12 sm:w-4/5 mx-auto flex items-center \r\n            justify-between gap-1\"\r\n    >\r\n      <button\r\n        className={`text-xs sm:text-sm md:text-base lg:text-lg ${\r\n          themeMode\r\n            ? \"text-light-dark-font hover:text-light-gray-font\"\r\n            : \"text-light-gray-font hover:text-white\"\r\n        }`}\r\n        disabled={currentPage === 1}\r\n        onClick={onPrevious}\r\n      >\r\n        <i className=\"fa-solid fa-arrow-left pr-1 sm:pr-2\"></i>\r\n        Previous\r\n      </button>\r\n\r\n      <ul\r\n        className={`${\r\n          themeMode ? \"text-light-dark-font\" : \"text-light-gray-font\"\r\n        } flex gap-1 sm:gap-2 items-center justify-center`}\r\n      >\r\n        {paginationRange.map((pageNumber) => {\r\n          if (pageNumber === DOTS) {\r\n            return <li>&#8230;</li>;\r\n          }\r\n\r\n          return (\r\n            <li\r\n              key={pageNumber}\r\n              className={`py-1 px-2 text-xs sm:text-sm md:text-base lg:text-lg md:py-2 md:px-2 rounded-full cursor-pointer ${\r\n                themeMode ? \"hover:text-light-gray-font\" : \"hover:text-white\"\r\n              } ${\r\n                pageNumber === currentPage ? \"bg-nav-active-bg text-white\" : \"\"\r\n              }`}\r\n              onClick={() => onPageChange(pageNumber)}\r\n            >\r\n              {pageNumber}\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n\r\n      <button\r\n        className={`text-xs sm:text-sm md:text-base lg:text-lg ${\r\n          themeMode\r\n            ? \"text-light-dark-font hover:text-light-gray-font\"\r\n            : \"text-light-gray-font hover:text-white\"\r\n        }`}\r\n        disabled={currentPage === lastPage}\r\n        onClick={onNext}\r\n      >\r\n        Next\r\n        <i className=\"fa-solid fa-arrow-right pl-1 sm:pl-2\"></i>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n"]},"metadata":{},"sourceType":"module"}